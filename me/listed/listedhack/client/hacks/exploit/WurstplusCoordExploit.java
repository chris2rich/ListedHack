package me.listed.listedhack.client.hacks.exploit;

import java.io.File;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.util.HashMap;
import java.util.Iterator;
import me.listed.listedhack.client.hacks.WurstplusCategory;
import me.listed.listedhack.client.hacks.WurstplusHack;
import me.listed.listedhack.client.util.WurstplusMessageUtil;
import net.minecraft.entity.Entity;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.util.math.Vec3d;

public class WurstplusCoordExploit extends WurstplusHack {
   private HashMap<Entity, Vec3d> knownPlayers = new HashMap();
   private HashMap<String, Vec3d> tpdPlayers = new HashMap();
   private int numTicks = 0;
   private int numForgetTicks = 0;

   public WurstplusCoordExploit() {
      super(WurstplusCategory.WURSTPLUS_EXPLOIT);
      this.name = "Coord Exploit";
      this.tag = "CoordExploit";
      this.description = "find someone's coords";
   }

   public void update() {
      if (this.numTicks >= 50) {
         this.numTicks = 0;
         Iterator var1 = mc.field_71441_e.field_72996_f.iterator();

         label44:
         while(true) {
            Entity entity;
            do {
               do {
                  if (!var1.hasNext()) {
                     break label44;
                  }

                  entity = (Entity)var1.next();
               } while(!(entity instanceof EntityPlayer));
            } while(entity.func_70005_c_().equals(mc.field_71439_g.func_70005_c_()));

            Vec3d playerPos = new Vec3d(entity.field_70165_t, entity.field_70163_u, entity.field_70161_v);
            if (this.knownPlayers.containsKey(entity) && Math.abs(((Vec3d)this.knownPlayers.get(entity)).func_72438_d(playerPos)) > 50.0D && Math.abs(mc.field_71439_g.func_174791_d().func_72438_d(playerPos)) > 100.0D && (!this.tpdPlayers.containsKey(entity.func_70005_c_()) || this.tpdPlayers.get(entity.func_70005_c_()) != playerPos)) {
               WurstplusMessageUtil.send_client_message("Player " + entity.func_70005_c_() + " has tp'd to " + vectorToString(playerPos, false));
               this.saveFile(vectorToString(playerPos, false), entity.func_70005_c_());
               this.knownPlayers.remove(entity);
               this.tpdPlayers.put(entity.func_70005_c_(), playerPos);
            }

            this.knownPlayers.put(entity, playerPos);
         }
      }

      if (this.numForgetTicks >= 9000000) {
         this.tpdPlayers.clear();
      }

      ++this.numTicks;
      ++this.numForgetTicks;
   }

   public static String vectorToString(Vec3d vector, boolean includeY) {
      StringBuilder builder = new StringBuilder();
      builder.append('(');
      builder.append((int)Math.floor(vector.field_72450_a));
      builder.append(", ");
      if (includeY) {
         builder.append((int)Math.floor(vector.field_72448_b));
         builder.append(", ");
      }

      builder.append((int)Math.floor(vector.field_72449_c));
      builder.append(")");
      return builder.toString();
   }

   public void saveFile(String pos, String name) {
      try {
         File file = new File("./WURSTPLUSTWO/coordexploit.txt");
         file.getParentFile().mkdirs();
         PrintWriter writer = new PrintWriter(new FileWriter(file, true));
         writer.println("name: " + name + " coords: " + pos);
         writer.close();
      } catch (Exception var5) {
      }

   }
}
