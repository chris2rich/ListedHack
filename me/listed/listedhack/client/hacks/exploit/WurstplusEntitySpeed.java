package me.listed.listedhack.client.hacks.exploit;

import me.listed.listedhack.client.guiscreen.settings.WurstplusSetting;
import me.listed.listedhack.client.hacks.WurstplusCategory;
import me.listed.listedhack.client.hacks.WurstplusHack;
import net.minecraft.util.MovementInput;

public class WurstplusEntitySpeed extends WurstplusHack {
   WurstplusSetting speed = this.create("Speed", "Speed", 1.5D, 0.0D, 15.0D);

   public WurstplusEntitySpeed() {
      super(WurstplusCategory.WURSTPLUS_EXPLOIT);
      this.name = "Entity Speed";
      this.tag = "EntitySpeed";
      this.description = "fast ride";
   }

   public void update() {
      if (mc.field_71439_g.func_184187_bx() != null) {
         MovementInput movementInput = mc.field_71439_g.field_71158_b;
         double forward = (double)movementInput.field_192832_b;
         double strafe = (double)movementInput.field_78902_a;
         float yaw = mc.field_71439_g.field_70177_z;
         if (forward == 0.0D && strafe == 0.0D) {
            mc.field_71439_g.func_184187_bx().field_70159_w = 0.0D;
            mc.field_71439_g.func_184187_bx().field_70179_y = 0.0D;
         } else {
            if (forward != 0.0D) {
               if (strafe > 0.0D) {
                  yaw += (float)(forward > 0.0D ? -45 : 45);
               } else if (strafe < 0.0D) {
                  yaw += (float)(forward > 0.0D ? 45 : -45);
               }

               strafe = 0.0D;
               if (forward > 0.0D) {
                  forward = 1.0D;
               } else if (forward < 0.0D) {
                  forward = -1.0D;
               }
            }

            double sin = Math.sin(Math.toRadians((double)(yaw + 90.0F)));
            double cos = Math.cos(Math.toRadians((double)(yaw + 90.0F)));
            mc.field_71439_g.func_184187_bx().field_70159_w = forward * (double)this.speed.get_value(1) * cos + strafe * (double)this.speed.get_value(1) * sin;
            mc.field_71439_g.func_184187_bx().field_70179_y = forward * (double)this.speed.get_value(1) * sin - strafe * (double)this.speed.get_value(1) * cos;
         }
      }

   }
}
